<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{% getGlobal 'siteName' %}</title>
  <base href="{% getGlobal 'basePath' %}" />
  <link rel="preconnect" crossorigin href="{% getGlobal "preconnect" %}" />
  <link rel="preconnect" crossorigin href="https://fonts.googleapis.com" />
  <link rel="preconnect" crossorigin href="https://cdnjs.cloudflare.com" />
  <link rel="preconnect" crossorigin href="https://i.creativecommons.org" />
  <link rel="preconnect" crossorigin href="https://licensebuttons.net" />
  <link rel="preload" href="{% getGlobal 'cdn' %}build.js" as="script" />
  <link rel="preload" href="{% getGlobal 'cdn' %}wc-registry.json" as="fetch" crossorigin="anonymous" />
  <link rel="preload" href="{% getGlobal 'cdn' %}build/es6/node_modules/@lrnwebcomponents/dynamic-import-registry/dynamic-import-registry.js" as="script" crossorigin="anonymous" />
  <link rel="modulepreload" href="{% getGlobal 'cdn' %}build/es6/node_modules/@lrnwebcomponents/dynamic-import-registry/dynamic-import-registry.js" />
  <link rel="preload" href="{% getGlobal 'cdn' %}build/es6/node_modules/@lrnwebcomponents/wc-autoload/wc-autoload.js" as="script" crossorigin="anonymous" />
  <link rel="modulepreload" href="{% getGlobal 'cdn' %}build/es6/node_modules/@lrnwebcomponents/wc-autoload/wc-autoload.js" />
  <link rel="preload" href="{% getGlobal 'cdn' %}build/es6/node_modules/web-animations-js/web-animations-next-lite.min.js" as="script" />
  
  <link rel="preload" as="script" href="{% getGlobal 'cdnBuild' %}@lrnwebcomponents/deduping-fix/deduping-fix.js" />	
  <link rel="preload" as="script" href="/assets/js/es-module-shims.min.js" />
  <link rel="manifest" href="/manifest.json">
  <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,user-scalable=yes" />
  <meta name="generator" content="HAXcms / Eleventy" />
  <meta name="theme-color" content="#3f51b5">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="robots" content="index, follow">
  <meta name="application-name" content="{% getGlobal 'siteName' %}">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="apple-mobile-web-app-title" content="{% getGlobal 'siteName' %}">
  <meta name="msapplication-TileImage" content="/assets/icon-144x144.png">
  <meta name="msapplication-TileColor" content="#3f51b5">
  <meta name="msapplication-tap-highlight" content="no">
  <link rel="icon" href="/assets/favicon.ico">
  <link rel="apple-touch-icon" href="/assets/icon-48x48.png">
  <link rel="apple-touch-icon" sizes="72x72" href="/assets/icon-72x72.png">
  <link rel="apple-touch-icon" sizes="96x96" href="/assets/icon-96x96.png">
  <link rel="apple-touch-icon" sizes="144x144" href="/assets/icon-144x144.png">
  <link rel="apple-touch-icon" sizes="192x192" href="/assets/icon-192x192.png">

  <meta name="description" content="{% getGlobal 'siteDescription' %}" />
  <meta name="og:sitename" property="og:sitename" content="{% getGlobal 'siteName' %}" />
  <meta name="og:title" property="og:title" content="{% getGlobal 'siteName' %}" />
  <meta name="og:type" property="og:type" content="article" />
  <meta name="og:url" property="og:url" content="{% getGlobal 'url' %}" />
  <meta name="og:description" property="og:description" content="{% getGlobal 'siteDescription' %}" />
  <meta name="og:image" property="og:image" content="/assets/banner.jpg" />
  <meta name="twitter:card" property="twitter:card" content="summary_large_image" />
  <meta name="twitter:site" property="twitter:site" content="{% getGlobal 'url' %}" />
  <meta name="twitter:title" property="twitter:title" content="{% getGlobal 'siteName' %}" />
  <meta name="twitter:description" property="twitter:description" content="{% getGlobal 'siteDescription' %}" />
  <meta name="twitter:image" property="twitter:image" content="/assets/banner.jpg" />
  <meta rel="cc:license" href="{% getLicenseInfo 'link' %}" content="License: {% getLicenseInfo 'name' %}"/>
  <meta name="twitter:creator" content="@{% getGlobal 'twitterName' %}" />
  <!-- <script defer async src="/connectionSettings"></script> -->
  <style>
    body {
      margin: 0;
    }
  </style>
  {% if haxcms.serviceWorker == true %}
  <script>
    if ('serviceWorker' in navigator) {
      var sitePath = "{% getGlobal 'basePath' %}";
      // discover this path downstream of the root of the domain
      var swScope = window.location.pathname.substring(0, window.location.pathname.indexOf(sitePath)) + sitePath;
      if (swScope != document.head.getElementsByTagName('base')[0].href) {
        document.head.getElementsByTagName('base')[0].href = swScope;
      }
      window.addEventListener('load', function () {
        navigator.serviceWorker.register('service-worker.js', {
          scope: swScope
        }).then(function (registration) {
          registration.onupdatefound = function () {
            // The updatefound event implies that registration.installing is set; see
            // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event
            var installingWorker = registration.installing;
            installingWorker.onstatechange = function () {
              switch (installingWorker.state) {
                case 'installed':
                  if (!navigator.serviceWorker.controller) {
                    window.dispatchEvent(new CustomEvent('simple-toast-show', {
                      bubbles: true,
                      cancelable: false,
                      detail: {
                        text: 'Pages you view are cached for offline use.',
                        duration: 8000
                      }
                    }));
                  }
                break;
                case 'redundant':
                  throw Error('The installing service worker became redundant.');
                break;
              }
            };
          };
        }).catch(function (e) {
          console.warn('Service worker registration failed:', e);
        });
        // Check to see if the service worker controlling the page at initial load
        // has become redundant, since this implies there's a new service worker with fresh content.
        if (navigator.serviceWorker.controller) {
          navigator.serviceWorker.controller.onstatechange = function(event) {
            if (event.target.state === 'redundant') {
              var b = document.createElement('mwc-button');
              b.appendChild(document.createTextNode('Reload'));
              b.raised = true;
              b.addEventListener('click', function(e){ window.location.reload(true); });
              window.dispatchEvent(new CustomEvent('simple-toast-show', {
                bubbles: true,
                cancelable: false,
                detail: {
                  text: 'A site update is available. Reload for latest content.',
                  duration: 12000,
                  slot: b,
                  clone: false
                }
              }));
            }
          };
        }
      });
    }
  </script>
  {% endif %}
</head>
<body no-js vocab="http://schema.org/" prefix="oer:http://oerschema.org cc:http://creativecommons.org/ns dc:http://purl.org/dc/terms/">
  {{content}}
  <script>document.body.removeAttribute('no-js');window.__appCDN="{% getGlobal 'cdn' %}";window.__appForceUpgrade=true;</script>
  <script src="{% getGlobal 'cdn' %}build.js"></script>
  <script src="{% getGlobal 'cdnBuild' %}@lrnwebcomponents/deduping-fix/deduping-fix.js"></script>
  <script defer src="/assets/js/es-module-shims.min.js"></script>
  <script type="importmap-shim">
  {
    "imports": {
      "lit-element/": "{% getGlobal 'cdnBuild' %}lit-element/",
      "@lrnwebcomponents/": "{% getGlobal 'cdnBuild' %}@lrnwebcomponents/"
    }
  }
  </script>
  <script type="module-shim">
    import "/assets/js/app.js";
  </script>
  <link rel="stylesheet" type="text/css" href="/assets/css/styles.css" />
  <link rel="stylesheet" type="text/css" href="{% getGlobal 'cdnBuild' %}@lrnwebcomponents/haxcms-elements/lib/base.css">
  <link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet" />
</body>
</html>